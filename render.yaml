services:
  # ================================
  # Production Environment Services
  # ================================
  - type: web
    name: django-production
    runtime: docker
    repo: https://github.com/ThePyoneerProject/platform.git
    branch: stable
    dockerfilePath: ./deployment/production/django/Dockerfile
    dockerCommand: /start
    envVars:
      - fromGroup: env-group
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings.production
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DJANGO_SUPERUSER_EMAIL
        sync: false
      - key: DJANGO_SUPERUSER_PASSWORD
        sync: false
      - key: DJANGO_ALLOWED_HOSTS
        value: pyoneers.dev,.pyoneers.dev,.onrender.com
      - key: DATABASE_URL
        fromDatabase:
          name: postgres-production
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-production
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: redis-production
          property: connectionString
    region: frankfurt
    plan: starter
# NOTE: Uncomment the following lines to enable Celery
#  - type: worker
#    name: celery-worker-production
#    runtime: docker
#    repo: https://github.com/ThePyoneerProject/platform.git
#    dockerfilePath: ./deployment/production/django/Dockerfile
#    dockerCommand: /start-celeryworker
#    autoDeploy: false
#    envVars:
#      - key: DJANGO_SETTINGS_MODULE
#        value: config.settings.production
#      - fromGroup: env-group
#      - key: CELERY_BROKER_URL
#        fromService:
#          type: redis
#          name: redis-production
#          property: connectionString
#      - key: DATABASE_URL
#        fromDatabase:
#          name: postgres-production
#          property: connectionString
#    region: frankfurt
#    plan: starter
#
#  - type: web
#    name: celery-flower-production
#    runtime: docker
#    repo: https://github.com/ThePyoneerProject/platform.git
#    dockerfilePath: ./deployment/production/django/Dockerfile
#    dockerCommand: /start-flower
#    autoDeploy: false
#    envVars:
#      - fromGroup: env-group
#      - key: DATABASE_URL
#        fromDatabase:
#          name: postgres-production
#          property: connectionString
#      - key: CELERY_BROKER_URL
#        fromService:
#          type: redis-production
#          name: redis-production
#          property: connectionString
#      - key: CELERY_FLOWER_USER
#        sync: false
#      - key: CELERY_FLOWER_PASSWORD
#        sync: false
#    region: frankfurt
#    plan: free
#
#  - type: worker
#    name: celery-beat-production
#    runtime: docker
#    repo: https://github.com/ThePyoneerProject/platform.git
#    dockerfilePath: ./deployment/production/django/Dockerfile
#    dockerCommand: /start-celerybeat
#    autoDeploy: false
#    envVars:
#      - fromGroup: env-group
#      - key: DATABASE_URL
#        fromDatabase:
#          name: postgres-production
#          property: connectionString
#      - key: CELERY_BROKER_URL
#        fromService:
#          type: redis
#          name: redis-production
#          property: connectionString
#    region: frankfurt
#    plan: starter

  - type: redis
    name: redis-production
    ipAllowList:
      - source: 0.0.0.0/0
        description: Allow all IP addresses
    maxmemoryPolicy: noeviction
    region: frankfurt
    plan: starter

  # =============================
  # Staging Environment Services
  # =============================
  - type: web
    name: django-staging
    runtime: docker
    repo: https://github.com/ThePyoneerProject/platform.git
    branch: master
    dockerfilePath: ./deployment/production/django/Dockerfile
    dockerCommand: /start
    envVars:
      - fromGroup: env-group
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings.production
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DJANGO_ALLOWED_HOSTS
        value: staging.pyoneers.dev,.staging.pyoneers.dev,.onrender.com
      - key: DATABASE_URL
        fromDatabase:
          name: postgres-staging
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-staging
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: redis-staging
          property: connectionString
    region: frankfurt
    plan: free

  - type: redis
    name: redis-staging
    ipAllowList:
      - source: 0.0.0.0/0
        description: Allow all IP addresses
    maxmemoryPolicy: noeviction
    region: frankfurt
    plan: free


databases:
  # ================================
  # Production Environment Databases
  # ================================
  - name: postgres-production
    databaseName: the_pyoneers_platform_db
    user: chris
    region: frankfurt
    plan: starter

  # =============================
  # Staging Environment Databases
  # =============================
  - name: postgres-staging
    databaseName: the_pyoneers_platform_db_staging
    user: chris
    region: frankfurt
    plan: free
